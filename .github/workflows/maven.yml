# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created] 

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: image
  
jobs:

  build:
    name: build-job
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: build with Maven
      run: mvn -B package --file pom.xml
    - name: copy jar
      run: |
        cd target
        cp *.jar .. 
    - name: Create image
      run: |
        if [ -f docker-compose.test.yml ]; then
        docker-compose --file docker-compose.test.yml build
        docker-compose --file docker-compose.test.yml run sut
        else
        docker build . --file Dockerfile --tag $IMAGE_NAME
        fi
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
